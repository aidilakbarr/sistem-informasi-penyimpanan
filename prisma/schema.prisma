// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String      @id @default(uuid())
  name           String
  email          String   @unique
  password       String
  emailVerified  Boolean  @default(false)
  verificationToken  String? 
  verificationTokenExpires DateTime? 
  refreshToken       String? 
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  lastLogin      DateTime?
  profilePicture String?
  role           Role     @default(USER)

  pemesanan Pemesanan[]
}

enum Role {
  ADMIN
  USER
}

model Pemesanan {
  id               String      @id @default(uuid())
  fotoBarang       String
  nama             String
  deskripsiBarang  String?
  durasiPenyimpanan String
  ukuranBarang     String
  catatan          String?
  harga    Int?
  penjemputan      String
  isAccepted Boolean @default(false)
  status  Status @default(WAITING)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId String 
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Status {
  WAITING
  ACCEPTED
  REJECTED
  COMPLETED
}
